CREATE QUERY tg_common_neighbors(VERTEX v_source, VERTEX v_target, SET<STRING> e_type, BOOL print_results = TRUE)  SYNTAX V1 { 

    /*
    First Author: <First Author Name>
    First Commit Date:  <First Commit Date>

    Recent Author: <Recent Commit Author Name>
    Recent Commit Date: <Recent Commit Date>


    Repository:
        https://github.com/tigergraph/gsql-graph-algorithms/tree/master/algorithms/Topological%20Link%20Prediction

    Maturity:
        production

    Description: 
        This query calculates the number of common neighbors between two vertices.
        The higher the number, the closer two vertices are.

    Publications:
        NA

    TigerGraph Documentation:
        https://docs.tigergraph.com/graph-ml/current/link-prediction/common-neighbors

    Parameters:
        v_source:
            Input vertex one
        v_target:
            Input vertex two
        e_type:
            edge types to traverse. If all edge types are desired, pass in "ALL" to the set.
        print_results:
            Boolean of if you want to print result (True by default)
    */

    avs = {v_source};
    bvs = {v_target};

    IF "ALL" NOT IN e_type THEN  # Specific edge types defined
        # Get neighbors of source vertices
        na = SELECT n 
             FROM avs -(e_type)- :n; 
  
        nb = SELECT n 
             FROM bvs -(e_type)- :n; 
             
    ELSE  # Use any edge types
        # Get neighbors of source vertices
        na = SELECT n 
             FROM avs -()- :n; 
             
        nb = SELECT n 
             FROM bvs -()- :n; 
    END;
    # Get neighbors in common
    u = na INTERSECT nb; 
    
    IF print_results THEN
        PRINT u.size() as closeness; 
    END;
}
